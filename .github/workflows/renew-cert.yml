#
# Auto Renew SAN Certificates by GaoYP, 20250308, modified 20250322
#
name: Auto Renew SAN Certificates

on:
  schedule:
    - cron: "0 0 * * 5"  # 每周五 UTC 0 点检查
  workflow_dispatch:

jobs:
  certificate-manager:
    runs-on: ubuntu-latest
    env:
      RENEW_TH: 10  # 触发续期的剩余天数阈值THRESHOLD
      DNSSLEEP: 120 # DNS API生效等待时间
      DOMAIN_ALI: "gaoyp.com" # 阿里云域名
      DOMAIN_CF: "gaotz.com"  # Cloudflare 域名
      CERT_DIR: "${{ github.workspace }}/certs"
      Ali_Key: ${{ secrets.Ali_Key }}       # 阿里云 AccessKey ID
      Ali_Secret: ${{ secrets.Ali_Secret }} # 阿里云 AccessKey Secret
      CF_Key: ${{ secrets.CF_Key }}         # Cloudflare 全局 API Key
      CF_Email: ${{ secrets.CF_Email }}     # Cloudflare 注册邮箱
      MYCERT_PWD: ${{ secrets.MYCERT_PWD }} # ZIP 文件密码
    steps:
      # ---------- 初始化 ----------
      - name: 1. 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------- 安装工具和 acme.sh v2.8.5 ----------
      - name: 2. 安装必要工具和 acme.sh v2.8.5
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip openssl

          # 清理旧的账户密钥
          rm -rf ~/.acme.sh/

          # 安装 acme.sh v2.8.5
          curl -L https://github.com/acmesh-official/acme.sh/archive/2.8.5.tar.gz | tar -xz
          mv acme.sh-2.8.5 ~/.acme.sh
          echo "$HOME/.acme.sh" >> $GITHUB_PATH
          ~/.acme.sh/acme.sh --version

          # acme.sh 2.8.5在加入以下文件后可顺利签发san域名，文件来自原群晖定时执行的acme中
          echo "==> 追加ca文件夹及其文件"
          mkdir -p /home/runner/.acme.sh/ca/acme-v02.api.letsencrypt.org
          unzip -P $MYCERT_PWD $CERT_DIR/acme-v02.api.letsencrypt.org.zip -d \
            /home/runner/.acme.sh/ca/acme-v02.api.letsencrypt.org

      # ---------- 创建目录并检查证书有效期 ----------
      - name: 3. 创建目录并检查证书有效期
        id: check-cert
        run: |
          # 证书目录不存在则建立
          mkdir -p $CERT_DIR

          # 当前时间
          current_time=$(date +%s)

          # 解压阿里云多域名证书
          if [ -f $CERT_DIR/$DOMAIN_ALI.san.zip ]; then
            unzip -P $MYCERT_PWD $CERT_DIR/$DOMAIN_ALI.san.zip -d ./temp/
            # 检查有效期
            days_left_ali=$(openssl x509 -in ./temp/$DOMAIN_ALI.cer -enddate -noout | cut -d= -f2 | xargs -I {} date -d {} +%s)
            days_left_ali=$(( ($days_left_ali - $current_time) / 86400 ))
          else
            days_left_ali=0  # 如果 ZIP 文件不存在，触发续签
          fi
          echo "==> days_left_ali="$days_left_ali

          # 解压 Cloudflare 多域名证书
          if [ -f $CERT_DIR/$DOMAIN_CF.san.zip ]; then
            unzip -P $MYCERT_PWD $CERT_DIR/$DOMAIN_CF.san.zip -d ./temp/
            # 检查有效期
            days_left_cf=$(openssl x509 -in ./temp/$DOMAIN_CF.cer -enddate -noout | cut -d= -f2 | xargs -I {} date -d {} +%s)
            days_left_cf=$(( ($days_left_cf - $current_time) / 86400 ))
          else
            days_left_cf=0  # 如果 ZIP 文件不存在，触发续签
          fi
          echo "==> days_left_cf="$days_left_cf

          # 清理临时文件
          rm -rf ./temp/

          # 设置全局变量 NEED_RENEW
          if [ "$days_left_ali" -le $RENEW_TH ] || [ "$days_left_cf" -le $RENEW_TH ]; then
            echo "NEED_RENEW=true" >> $GITHUB_ENV
            echo "==> 已到续期时间"
            echo "==> 备份证书文件"
            mydate=$(date +'%Y%m%d-%H%M%S')
            [ -f $CERT_DIR/$DOMAIN_ALI.zip ] && cp $CERT_DIR/$DOMAIN_ALI.zip $CERT_DIR/$DOMAIN_ALI.$mydate.zip
            [ -f $CERT_DIR/$DOMAIN_CF.zip ] && cp $CERT_DIR/$DOMAIN_CF.zip $CERT_DIR/$DOMAIN_CF.$mydate.zip
            [ -f $CERT_DIR/$DOMAIN_ALI.san.zip ] && cp $CERT_DIR/$DOMAIN_ALI.san.zip $CERT_DIR/$DOMAIN_ALI.san.$mydate.zip
            [ -f $CERT_DIR/$DOMAIN_CF.san.zip ] && cp $CERT_DIR/$DOMAIN_CF.san.zip $CERT_DIR/$DOMAIN_CF.san.$mydate.zip
          else
            echo "NEED_RENEW=false" >> $GITHUB_ENV
            echo "==> 未到续期时间"
          fi

      # ---------- 签发单域名证书并加密 ----------
      - name: 4. 签发阿里云单证书并加密
        if: env.NEED_RENEW == 'true'
        run: |
          ~/.acme.sh/acme.sh --issue --dns dns_ali \
            --dnssleep $DNSSLEEP \
            -d $DOMAIN_ALI -d *.$DOMAIN_ALI \
            --cert-file $CERT_DIR/$DOMAIN_ALI.cer \
            --key-file $CERT_DIR/$DOMAIN_ALI.key \
            --fullchain-file $CERT_DIR/$DOMAIN_ALI.fullchain.cer

          # 将证书文件打包为 ZIP 并加密
          zip -P $MYCERT_PWD -j $CERT_DIR/$DOMAIN_ALI.zip \
            $CERT_DIR/$DOMAIN_ALI.cer \
            $CERT_DIR/$DOMAIN_ALI.key \
            $CERT_DIR/$DOMAIN_ALI.fullchain.cer

          # 删除原始证书文件
          rm -f $CERT_DIR/$DOMAIN_ALI.cer $CERT_DIR/$DOMAIN_ALI.key $CERT_DIR/$DOMAIN_ALI.fullchain.cer

      - name: 5. 签发Cloudflare单证书并加密
        if: env.NEED_RENEW == 'true'
        run: |
          ~/.acme.sh/acme.sh --issue --dns dns_cf \
            --dnssleep $DNSSLEEP \
            -d $DOMAIN_CF -d *.$DOMAIN_CF \
            --cert-file $CERT_DIR/$DOMAIN_CF.cer \
            --key-file $CERT_DIR/$DOMAIN_CF.key \
            --fullchain-file $CERT_DIR/$DOMAIN_CF.fullchain.cer

          # 将证书文件打包为 ZIP 并加密
          zip -P $MYCERT_PWD -j $CERT_DIR/$DOMAIN_CF.zip \
            $CERT_DIR/$DOMAIN_CF.cer \
            $CERT_DIR/$DOMAIN_CF.key \
            $CERT_DIR/$DOMAIN_CF.fullchain.cer

          # 删除原始证书文件
          rm -f $CERT_DIR/$DOMAIN_CF.cer $CERT_DIR/$DOMAIN_CF.key $CERT_DIR/$DOMAIN_CF.fullchain.cer

      # ---------- 签发多域名证书并加密 ----------
      - name: 6. 签发阿里云 SAN 证书并加密
        if: env.NEED_RENEW == 'true'
        run: |
          ~/.acme.sh/acme.sh --issue --dns dns_ali \
            --dnssleep $DNSSLEEP \
            -d $DOMAIN_ALI -d *.$DOMAIN_ALI -d $DOMAIN_CF -d *.$DOMAIN_CF \
            --cert-file $CERT_DIR/$DOMAIN_ALI.cer \
            --key-file $CERT_DIR/$DOMAIN_ALI.key \
            --fullchain-file $CERT_DIR/$DOMAIN_ALI.fullchain.cer

          # 将证书文件打包为 ZIP 并加密
          zip -P $MYCERT_PWD -j $CERT_DIR/$DOMAIN_ALI.san.zip \
            $CERT_DIR/$DOMAIN_ALI.cer \
            $CERT_DIR/$DOMAIN_ALI.key \
            $CERT_DIR/$DOMAIN_ALI.fullchain.cer

          # 删除原始证书文件
          rm -f $CERT_DIR/$DOMAIN_ALI.cer $CERT_DIR/$DOMAIN_ALI.key $CERT_DIR/$DOMAIN_ALI.fullchain.cer

      - name: 7. 签发Cloudflare SAN 证书并加密
        if: env.NEED_RENEW == 'true'
        run: |
          ~/.acme.sh/acme.sh --issue --dns dns_cf \
            --dnssleep $DNSSLEEP \
            -d $DOMAIN_CF -d *.$DOMAIN_CF -d $DOMAIN_ALI -d *.$DOMAIN_ALI \
            --cert-file $CERT_DIR/$DOMAIN_CF.cer \
            --key-file $CERT_DIR/$DOMAIN_CF.key \
            --fullchain-file $CERT_DIR/$DOMAIN_CF.fullchain.cer

          # 将证书文件打包为 ZIP 并加密
          zip -P $MYCERT_PWD -j $CERT_DIR/$DOMAIN_CF.san.zip \
            $CERT_DIR/$DOMAIN_CF.cer \
            $CERT_DIR/$DOMAIN_CF.key \
            $CERT_DIR/$DOMAIN_CF.fullchain.cer

          # 删除原始证书文件
          rm -f $CERT_DIR/$DOMAIN_CF.cer $CERT_DIR/$DOMAIN_CF.key $CERT_DIR/$DOMAIN_CF.fullchain.cer

      # ---------- 保存到仓库 ----------
      - name: 8. 提交证书到仓库
        if: env.NEED_RENEW == 'true'
        run: |
          echo "==> 提交到仓库"
          echo "Auto-renew certificates $(date +'%Y-%m-%d %H:%M:%S')" >> $CERT_DIR/mylog.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "$CERT_DIR"/
          git commit -m "Auto-renew certificates $(date +'%Y-%m-%d %H:%M:%S')"
          git push
